{"ast":null,"code":"var _jsxFileName = \"/Users/ariel/Desktop/binouze.me/binouze.me/src/Components/BeerList.js\";\nimport React, { useState, useEffect } from \"react\";\n\nconst BeerList = () => {\n  const [beers, setBeers] = useState();\n  useEffect(() => {\n    fetch(\"https://api.punkapi.com/v2/beers?page=2&per_page=24\").then(response => response.json()).then(responseData => {\n      setBeers(responseData);\n    }).catch(error => {\n      console.log(\"Error fetching and parsing data\", error);\n    });\n  }, []);\n  console.log(\"WTF __OKPOJO\", beers && beers);\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, beers.map(beer => {\n    return;\n  }), \" \");\n};\n\nexport default BeerList;","map":{"version":3,"sources":["/Users/ariel/Desktop/binouze.me/binouze.me/src/Components/BeerList.js"],"names":["React","useState","useEffect","BeerList","beers","setBeers","fetch","then","response","json","responseData","catch","error","console","log","map","beer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,EAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,KAAK,CAAC,qDAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,YAAD,IAAkB;AACtBL,MAAAA,QAAQ,CAACK,YAAD,CAAR;AACD,KAJH,EAKGC,KALH,CAKUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,KAA/C;AACD,KAPH;AAQD,GATQ,EASN,EATM,CAAT;AAWAC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BV,KAAK,IAAIA,KAArC;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACW,GAAN,CAAWC,IAAD,IAAU;AACnB;AACD,GAFA,CADH,EAGM,GAHN,CADF;AAOD,CAtBD;;AAwBA,eAAeb,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst BeerList = () => {\n  const [beers, setBeers] = useState();\n\n  useEffect(() => {\n    fetch(\"https://api.punkapi.com/v2/beers?page=2&per_page=24\")\n      .then((response) => response.json())\n      .then((responseData) => {\n        setBeers(responseData);\n      })\n      .catch((error) => {\n        console.log(\"Error fetching and parsing data\", error);\n      });\n  }, []);\n\n  console.log(\"WTF __OKPOJO\", beers && beers);\n  return (\n    <ul>\n      {beers.map((beer) => {\n        return;\n      })}{\" \"}\n    </ul>\n  );\n};\n\nexport default BeerList;\n"]},"metadata":{},"sourceType":"module"}