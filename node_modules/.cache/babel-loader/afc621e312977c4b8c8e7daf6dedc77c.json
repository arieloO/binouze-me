{"ast":null,"code":"import _slicedToArray from\"/Users/ariel/Desktop/Binouze.me/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import qs from\"qs\";import BeerPic from\"./BeerItem.js\";import NavOptions from\"./NavOptions.js\";var BeerList=function BeerList(_ref){var location=_ref.location,history=_ref.history;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),beers=_useState2[0],setBeers=_useState2[1];var queryString=qs.parse(location.search,{ignoreQueryPrefix:true});var page=parseInt(queryString.page)||1;var _useState3=useState(25),_useState4=_slicedToArray(_useState3,2),itemsPage=_useState4[0],setItemsPage=_useState4[1];useEffect(function(){fetch(\"https://api.punkapi.com/v2/beers?page=\".concat(page,\"&per_page=\").concat(itemsPage)).then(function(response){return response.json();}).then(function(responseData){setBeers(responseData);}).catch(function(error){console.log(\"Error fetching and parsing data\",error);});},[page,itemsPage]);var handlePageChanges=function handlePageChanges(delta){var path=\"/binouze-me/?page=\".concat(parseInt(page)+delta);history.push(path);};console.log(\"Type of BEERS\",beers&&beers,typeof beers);console.log(\"BEERLIST\",page);console.log(itemsPage,\"!==\",beers.length,itemsPage!==beers.length);var pageDisplay=\"page : \".concat(page);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(NavOptions,{beers:beers,itemsPage:itemsPage,page:page,handlePageChanges:handlePageChanges,setItemsPage:setItemsPage,pageDisplay:pageDisplay}),beers.length>0?/*#__PURE__*/React.createElement(\"ul\",{className:\"beer-list\"},beers.map(function(beer){return/*#__PURE__*/React.createElement(BeerPic,{key:beer.id,beer:beer});})):/*#__PURE__*/React.createElement(\"p\",null,\"LOADING...\"));};export default BeerList;","map":{"version":3,"sources":["/Users/ariel/Desktop/Binouze.me/src/Components/BeerList.js"],"names":["React","useState","useEffect","qs","BeerPic","NavOptions","BeerList","location","history","beers","setBeers","queryString","parse","search","ignoreQueryPrefix","page","parseInt","itemsPage","setItemsPage","fetch","then","response","json","responseData","catch","error","console","log","handlePageChanges","delta","path","push","length","pageDisplay","map","beer","id"],"mappings":"sJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,EAAP,KAAe,IAAf,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,iBAAvB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAA2B,IAAxBC,CAAAA,QAAwB,MAAxBA,QAAwB,CAAdC,OAAc,MAAdA,OAAc,eAChBP,QAAQ,CAAC,EAAD,CADQ,wCACnCQ,KADmC,eAC5BC,QAD4B,eAG1C,GAAMC,CAAAA,WAAW,CAAGR,EAAE,CAACS,KAAH,CAASL,QAAQ,CAACM,MAAlB,CAA0B,CAAEC,iBAAiB,CAAE,IAArB,CAA1B,CAApB,CACA,GAAMC,CAAAA,IAAI,CAAGC,QAAQ,CAACL,WAAW,CAACI,IAAb,CAAR,EAA8B,CAA3C,CAJ0C,eAMRd,QAAQ,CAAC,EAAD,CANA,yCAMnCgB,SANmC,eAMxBC,YANwB,eAO1ChB,SAAS,CAAC,UAAM,CACdiB,KAAK,iDAA0CJ,IAA1C,sBAA2DE,SAA3D,EAAL,CACGG,IADH,CACQ,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EADR,EAEGF,IAFH,CAEQ,SAACG,YAAD,CAAkB,CACtBb,QAAQ,CAACa,YAAD,CAAR,CACD,CAJH,EAKGC,KALH,CAKS,SAACC,KAAD,CAAW,CAChBC,OAAO,CAACC,GAAR,CAAY,iCAAZ,CAA+CF,KAA/C,EACD,CAPH,EAQD,CATQ,CASN,CAACV,IAAD,CAAOE,SAAP,CATM,CAAT,CAWA,GAAMW,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAAW,CACnC,GAAMC,CAAAA,IAAI,6BAAwBd,QAAQ,CAACD,IAAD,CAAR,CAAiBc,KAAzC,CAAV,CACArB,OAAO,CAACuB,IAAR,CAAaD,IAAb,EACD,CAHD,CAKAJ,OAAO,CAACC,GAAR,CAAY,eAAZ,CAA6BlB,KAAK,EAAIA,KAAtC,CAA6C,MAAOA,CAAAA,KAApD,EACAiB,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwBZ,IAAxB,EACAW,OAAO,CAACC,GAAR,CAAYV,SAAZ,CAAuB,KAAvB,CAA8BR,KAAK,CAACuB,MAApC,CAA4Cf,SAAS,GAAKR,KAAK,CAACuB,MAAhE,EAEA,GAAMC,CAAAA,WAAW,kBAAalB,IAAb,CAAjB,CACA,mBACE,4CACE,oBAAC,UAAD,EACE,KAAK,CAAEN,KADT,CAEE,SAAS,CAAEQ,SAFb,CAGE,IAAI,CAAEF,IAHR,CAIE,iBAAiB,CAAEa,iBAJrB,CAKE,YAAY,CAAEV,YALhB,CAME,WAAW,CAAEe,WANf,EADF,CAUGxB,KAAK,CAACuB,MAAN,CAAe,CAAf,cACC,0BAAI,SAAS,CAAC,WAAd,EACGvB,KAAK,CAACyB,GAAN,CAAU,SAACC,IAAD,qBACT,oBAAC,OAAD,EAAS,GAAG,CAAEA,IAAI,CAACC,EAAnB,CAAuB,IAAI,CAAED,IAA7B,EADS,EAAV,CADH,CADD,cAOC,0CAjBJ,CADF,CAsBD,CAlDD,CAoDA,cAAe7B,CAAAA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport qs from \"qs\";\nimport BeerPic from \"./BeerItem.js\";\nimport NavOptions from \"./NavOptions.js\";\n\nconst BeerList = ({ location, history }) => {\n  const [beers, setBeers] = useState([]);\n\n  const queryString = qs.parse(location.search, { ignoreQueryPrefix: true });\n  const page = parseInt(queryString.page) || 1;\n\n  const [itemsPage, setItemsPage] = useState(25);\n  useEffect(() => {\n    fetch(`https://api.punkapi.com/v2/beers?page=${page}&per_page=${itemsPage}`)\n      .then((response) => response.json())\n      .then((responseData) => {\n        setBeers(responseData);\n      })\n      .catch((error) => {\n        console.log(\"Error fetching and parsing data\", error);\n      });\n  }, [page, itemsPage]);\n\n  const handlePageChanges = (delta) => {\n    const path = `/binouze-me/?page=${parseInt(page) + delta}`;\n    history.push(path);\n  };\n\n  console.log(\"Type of BEERS\", beers && beers, typeof beers);\n  console.log(\"BEERLIST\", page);\n  console.log(itemsPage, \"!==\", beers.length, itemsPage !== beers.length);\n\n  const pageDisplay = `page : ${page}`;\n  return (\n    <div>\n      <NavOptions\n        beers={beers}\n        itemsPage={itemsPage}\n        page={page}\n        handlePageChanges={handlePageChanges}\n        setItemsPage={setItemsPage}\n        pageDisplay={pageDisplay}\n      />\n\n      {beers.length > 0 ? (\n        <ul className=\"beer-list\">\n          {beers.map((beer) => (\n            <BeerPic key={beer.id} beer={beer} />\n          ))}\n        </ul>\n      ) : (\n        <p>LOADING...</p>\n      )}\n    </div>\n  );\n};\n\nexport default BeerList;\n"]},"metadata":{},"sourceType":"module"}