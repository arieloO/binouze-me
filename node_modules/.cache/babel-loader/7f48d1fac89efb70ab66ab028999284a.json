{"ast":null,"code":"import React, { Component } from \"react\";\nconst appRoot = document.getElementById(\"app-root\");\nconst modalRoot = document.getElementById(\"modal-root\");\n\nclass Modal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.el = document.createElement(\"div\");\n  }\n\n  componentDidMount() {\n    // The portal element is inserted in the DOM tree after\n    // the Modal's children are mounted, meaning that children\n    // will be mounted on a detached DOM node. If a child\n    // component requires to be attached to the DOM tree\n    // immediately when mounted, for example to measure a\n    // DOM node, or uses 'autoFocus' in a descendant, add\n    // state to Modal and only render the children when Modal\n    // is inserted in the DOM tree.\n    modalRoot.appendChild(this.el);\n  }\n\n  componentWillUnmount() {\n    modalRoot.removeChild(this.el);\n  }\n\n  render() {\n    return ReactDOM.createPortal(this.props.children, this.el);\n  }\n\n}\n\nexport default Modal;","map":{"version":3,"sources":["/Users/ariel/Desktop/binouze.me/binouze.me/src/Components/Modal.js"],"names":["React","Component","appRoot","document","getElementById","modalRoot","Modal","constructor","props","el","createElement","componentDidMount","appendChild","componentWillUnmount","removeChild","render","ReactDOM","createPortal","children"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,MAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAhB;AACA,MAAMC,SAAS,GAAGF,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAlB;;AAEA,MAAME,KAAN,SAAoBN,KAAK,CAACC,SAA1B,CAAoC;AAClCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,EAAL,GAAUN,QAAQ,CAACO,aAAT,CAAuB,KAAvB,CAAV;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAN,IAAAA,SAAS,CAACO,WAAV,CAAsB,KAAKH,EAA3B;AACD;;AAEDI,EAAAA,oBAAoB,GAAG;AACrBR,IAAAA,SAAS,CAACS,WAAV,CAAsB,KAAKL,EAA3B;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,WAAOC,QAAQ,CAACC,YAAT,CAAsB,KAAKT,KAAL,CAAWU,QAAjC,EAA2C,KAAKT,EAAhD,CAAP;AACD;;AAxBiC;;AA2BpC,eAAeH,KAAf","sourcesContent":["import React, { Component } from \"react\";\n\nconst appRoot = document.getElementById(\"app-root\");\nconst modalRoot = document.getElementById(\"modal-root\");\n\nclass Modal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.el = document.createElement(\"div\");\n  }\n\n  componentDidMount() {\n    // The portal element is inserted in the DOM tree after\n    // the Modal's children are mounted, meaning that children\n    // will be mounted on a detached DOM node. If a child\n    // component requires to be attached to the DOM tree\n    // immediately when mounted, for example to measure a\n    // DOM node, or uses 'autoFocus' in a descendant, add\n    // state to Modal and only render the children when Modal\n    // is inserted in the DOM tree.\n    modalRoot.appendChild(this.el);\n  }\n\n  componentWillUnmount() {\n    modalRoot.removeChild(this.el);\n  }\n\n  render() {\n    return ReactDOM.createPortal(this.props.children, this.el);\n  }\n}\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}